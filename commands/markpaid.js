const { SlashCommandBuilder } = require('discord.js');
const fs = require('fs');
const path = require('path');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('markpaid')
    .setDescription('Mark an order as paid and notify the buyer')
    .addStringOption(opt =>
      opt.setName('order')
        .setDescription('Order ID (e.g. 1027)')
        .setRequired(true))
    .addStringOption(opt =>
      opt.setName('item')
        .setDescription('Item purchased (e.g. Raccoon, Sheckles)')
        .setRequired(true))
    .addUserOption(opt =>
      opt.setName('user')
        .setDescription('Buyer\'s Discord user')
        .setRequired(true)),

  async execute(interaction) {
    const orderId = interaction.options.getString('order');
    const itemName = interaction.options.getString('item');
    const user = interaction.options.getUser('user');

    // Save to orders.json
    const ordersPath = path.join(__dirname, '..', 'orders.json');
    let orders = {};

    if (fs.existsSync(ordersPath)) {
      orders = JSON.parse(fs.readFileSync(ordersPath, 'utf8'));
    }

    orders[orderId] = itemName;
    fs.writeFileSync(ordersPath, JSON.stringify(orders, null, 2));

    // Edit log message if exists
    const logChannelId = '1397212138753495062';
    const client = interaction.client;

    try {
      const channel = await client.channels.fetch(logChannelId);
      if (channel && channel.isTextBased()) {
        const messages = await channel.messages.fetch({ limit: 50 });
        const logMessage = messages.find(msg =>
          msg.embeds?.[0]?.title === '📥 New Bloom Haven Order' &&
          msg.embeds[0].fields?.some(f => f.name === '🧾 Order ID' && f.value === orderId)
        );

        if (logMessage) {
          const embed = logMessage.embeds[0];
          const updatedFields = embed.fields.map(field => {
            if (field.name === '💳 Payment') {
              return { ...field, value: '✅ Payment Confirmed' };
            }
            return field;
          });

          await logMessage.edit({ embeds: [{ ...embed.toJSON(), fields: updatedFields }] });
        }
      }
    } catch (e) {
      console.warn('⚠️ Could not edit log message:', e);
    }

    try {
      await user.send(
        `💵 **Payment Confirmed Automatically**\n\n` +
        `🧾 Order \`${orderId}\` for **${itemName}** has been marked as paid.\n` +
        `📦 Your item is now queued for in-game delivery.\n` +
        `⏳ You’ll receive the private server link shortly.\n\n` +
        `💬 This message was generated by **Bloom Haven AutoOrder v2.1**`
      );

      await interaction.reply({
        content: `✅ Order \`${orderId}\` marked as paid and saved as **${itemName}**.`,
        ephemeral: true
      });
    } catch (err) {
      console.error('❌ DM failed:', err);
      await interaction.reply({
        content: `❌ Couldn't DM the user.`,
        ephemeral: true
      });
    }
  }
};
